services:

  redis:
    image: redis
    ports:
      - '6379:6379'
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 3s
      retries: 5

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data      
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${PG_DB} -U ${PG_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    command: sh -c "python3 manage.py migrate
      && python3 manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO 
    env_file:
      - .env
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_started
      db:
        condition: service_healthy

volumes:
  pg_data: